# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import gRPCapi.suggestion.suggestion_pb2 as suggestion__pb2


class SuggestionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetSuggestion = channel.unary_unary(
        '/Suggestion/GetSuggestion',
        request_serializer=suggestion__pb2.Study.SerializeToString,
        response_deserializer=suggestion__pb2.ReplyMessage.FromString,
        )
    self.CreateAlgorithm = channel.unary_unary(
        '/Suggestion/CreateAlgorithm',
        request_serializer=suggestion__pb2.Algorithm.SerializeToString,
        response_deserializer=suggestion__pb2.ReplyMessage.FromString,
        )


class SuggestionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetSuggestion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateAlgorithm(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SuggestionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetSuggestion': grpc.unary_unary_rpc_method_handler(
          servicer.GetSuggestion,
          request_deserializer=suggestion__pb2.Study.FromString,
          response_serializer=suggestion__pb2.ReplyMessage.SerializeToString,
      ),
      'CreateAlgorithm': grpc.unary_unary_rpc_method_handler(
          servicer.CreateAlgorithm,
          request_deserializer=suggestion__pb2.Algorithm.FromString,
          response_serializer=suggestion__pb2.ReplyMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Suggestion', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
